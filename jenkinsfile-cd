pipeline {
    agent {
    // se utiliza el nodo de pruebas de producción.
        label 'production'
    }
    environment {
    // variables que se utilizan en la ejecución de este pipeline:
        REPO = 'git@github.com:ismaelgithub7/Django-Project.git'
        RAMA = 'production'
        WORKSPACE = 'django-project-production'
        TIME_SLEEP = '10'
        EMAIL = 'Example@gmail.com'
    }
    stages {
    // Se comprueba que el host en el que se ejecuta este pipeline tiene el software adecuado.
        stage('Comprobar Software Necesario') {
            steps {
                sh 'docker version > /dev/null'
                sh 'docker compose version > /dev/null'
            }
        }

        stage('Comprobar Estado Dockers Ya en Producción') {
        // Se comprueba si el proyecto esta desplegado ya en producción, si es así se guardan sus archivos en otra carpeta, 
        // con el fin de si falla el despliege del nuevo proyecto recuperar el que ya estaba en funcionamiento. 
            steps {    
                script {    
                    try {
                        sh 'curl -I http://localhost:80'
                        sh 'docker exec postgres-alpine-production pwd'
                        sh 'docker exec django-production pwd'
                        sh 'docker exec nginx-alpine-production pwd'
                        // si no se detectan lo siguiente no se realiza.
                        echo '[INFO] Se bajarán los dockers activos para levantar los nuevos'
                        sh 'docker compose -f ./production/compose.yaml down'
                        sh "sudo chown -R jenkins /opt/jenkins/workspace/${WORKSPACE}"
                        sh "cp  -R /opt/jenkins/workspace/${WORKSPACE} /opt/jenkins/workspace/${WORKSPACE}-old"
                        sh "rm -rf /opt/jenkins/workspace/${WORKSPACE}/*"
                        git branch: "${RAMA}", credentialsId: 'ismael-github', url: "${REPO}"
                    }
                    catch (Exception e) {
                        echo '[INFO] Dockers no encontrados en Producción.'
                    }
                }
            }
        }

        stage('Levantar Dockers Producción') {
        // se levanta el nuevo proyecto.
            steps {
                script {
                    try {
                        sh 'docker compose -f ./production/compose.yaml up -d'
                        sh "sleep ${TIME_SLEEP}"
                    }
                    catch (Exception e){
                        echo 'Ha habido un problema al intentar levantar los dockers.'
                    }
                }
            }
        }

        stage('Comprobar Estado Dockers Acabados de Levantar') {
        // se comprueba el estado de los dockers levantados, si tienen algún problema se recupera el que ya estaba en producción si es que lo había.
            steps {
                script {
                    try {
                        sh 'curl -I http://localhost:80'
                        sh 'docker exec postgres-alpine-production pwd'
                        sh 'docker exec django-production pwd'
                        sh 'docker exec nginx-alpine-production pwd'
                        // si hay algún problema lo siguiente no se realiza.
                        echo '[SUCCESS] Dockers Nuevos Levantados con Éxito.'
                        sh "if [ -d '/opt/jenkins/workspace/${WORKSPACE}-old' ]; then rm -rf /opt/jenkins/workspace/${WORKSPACE}-old; else echo 'no existe'; fi"
                    }
                    catch (Exception e){
                        echo '[FAIL] Hubo un problema se restaurarán los dockers anteriores si existían.'
                        sh "sudo chown -R jenkins /opt/jenkins/workspace/${WORKSPACE}"
                        sh "rm -rf /opt/jenkins/workspace/${WORKSPACE}"
                        sh "mv /opt/jenkins/workspace/${WORKSPACE}-old /opt/jenkins/workspace/${WORKSPACE}"
                        sh "if [ -d '/opt/jenkins/workspace/${WORKSPACE}-old' ]; then mv /opt/jenkins/workspace/${WORKSPACE}-old /opt/jenkins/workspace/${WORKSPACE} && docker compose -f ./production/compose.yaml up -d; fi"
                        error 'Hubo un problema con los dockers nuevos.'
                    }
                }

            }
        }
    }

    post {
    // Si se a creado una copia del projecto que ya existía se borra para dejar el workspace cpomo estaba antes de esta ejecución.
    // Se envia un correo con el log de la ejecución.
        success {
            sh "if [ -d '/opt/jenkins/workspace/${WORKSPACE}-old' ]; then rm -rf /opt/jenkins/workspace/${WORKSPACE}-old; else echo 'no existe'; fi"
            emailext attachLog: true, body: 'Logs adjuntados.', subject: "[SUCCESS] La ejecución de CI de ${RAMA} ha sido realizada con éxito.", to: "${EMAIL}"
        }

        failure {
            sh "if [ -d '/opt/jenkins/workspace/${WORKSPACE}-old' ]; then rm -rf /opt/jenkins/workspace/${WORKSPACE}-old; else echo 'no existe'; fi"
            emailext attachLog: true, body: 'Logs adjuntados.', subject: "[FAIL] La ejecución de CI de ${RAMA} ha fallado.", to: "${EMAIL}"
        }
    }
}
