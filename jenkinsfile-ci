pipeline {
    agent {
        label 'develop'
    }
    environment {
        REPO = 'git@github.com:ismaelgithub7/portfolio-DevOps.git'
        RAMA = 'feature/jenkinsfile-ci'
        WORKSPACE = '"django-project develop"'
    }
    stages {
        stage('Clonar Repositorio/Rama') {
            steps {
                git branch: "${RAMA}", credentialsId: 'ismael-github', url: "${REPO}"
            }
        }

        stage('Comprobar Software Necesario') {
            steps {
                sh 'docker version > /dev/null'
                sh 'docker compose version > /dev/null'
            }
        }

        stage('Ejecutar Tests') {
            steps {
                sh 'docker compose -f ./develop/compose-develop.yaml up -d'
                sh "sleep 5"
                sh 'docker exec django-develop python3 manage.py test'
            }
            post {
                success {
                    echo '[SUCCESS] Tests Correctos' 
                    sh 'docker compose -f ./develop/compose-develop.yaml down'
                }
                failure {
                    error 'Tests no pasados con éxito.'
                    sh 'docker compose -f ./develop/compose-develop.yaml down'
                }
            }
        }

        stage('Levantar Dockers Producción') {
            steps {
                sh 'docker compose -f ./production/compose.yaml up -d'
            }
        }

        stage('Comprobar Estado Dockers Producción') {
            steps {
                 script {
                    try {
                        sh './production/docker-data/django/wait-for-it localhost'
                    } catch (Exception e) {
                        currentBuild.result = 'FAILURE'
                        error("${e.message}")
                }
                
            }
        }
        
        // stage('Ejecutar Tests') {
        //     steps {

        //     }
        // }
    }

    post {
        success {
            sh "sudo chown -R jenkins /opt/jenkins/workspace/${WORKSPACE}"
        }

        failure {
            sh "sudo chown -R jenkins /opt/jenkins/workspace/${WORKSPACE}"
        }
    }
}
